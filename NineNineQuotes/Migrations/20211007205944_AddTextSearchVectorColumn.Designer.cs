// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NineNineQuotes.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

namespace NineNineQuotes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211007205944_AddTextSearchVectorColumn")]
    partial class AddTextSearchVectorColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("NineNineQuotes.Data.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Character")
                        .HasColumnType("text");

                    b.Property<string>("Episode")
                        .HasColumnType("text");

                    b.Property<string>("QuoteText")
                        .HasColumnType("text");

                    b.Property<NpgsqlTsVector>("SearchVector")
                        .HasColumnType("tsvector");

                    b.HasKey("Id");

                    b.HasIndex("Episode", "Character", "QuoteText")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english");

                    b.ToTable("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
